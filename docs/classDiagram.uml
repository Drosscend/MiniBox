@startuml

title Diagramme de classe

class Main {
}

package Function <<Functions>> {

  class Config_handler {
    Permet de générer des dictionnaires contenant les paramètres
    +check_params()
    +get_base_params()
    +get_yolov5_params()
    +get_bdd_params()
    +print_config()
    +get_config()
  }

  class CustomFormater {
    Permet d'afficher les logs
    +format()
  }

  class Detect {
    Fonction principale du code
    +detection()
    +init_detection()
    +main()
  }

  class Save_utils {
    Crée le fichier csv/ la base de données
    +save_bdd()
    +save_csv()
  }

  class TrackedObjects {
    Permet de gérer les objets pour
    les enregistrer et y accéder plus facilement
    +int obj_id
    +float x1
    +float y1
    +float x2
    +float y2
    +str classe
    +array[x1, y1, x2, y2] : positions
    +str direction
    +void update_position()
    +void set_direction()
    +void calculate_direction()
  }

  class Utils {
    Différentes fonction utiles pour le programme
    +yolo_detections_to_norfair_detections()
    +get_label_by_name()
  }

  class YOLO {
    Classe permettant d'intialiser le modèle YOLO
    +__init__()
    +__call__()
  }

}

Main *-left- Detect: Passage des paramètres
Main *-up- CustomFormater: Mise en forme des logs
Main *-up- Config_handler: Récupération des paramètres

TrackedObjects *-up- Detect: Enregistrement des données dans des classes

Detect *-up- Utils: Appel de fonctions utilitaires
Detect *-left- Save_utils: Enregistrement des données dans le CSV/BDD
Detect *-down- YOLO: Initialisation du modèle YOLO

@enduml
